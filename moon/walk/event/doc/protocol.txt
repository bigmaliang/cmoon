 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

协议头
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Version    |                 Request ID                    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Request command       |             Flags             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      plugin name length                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                          plugin name                          :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

协议体
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         variable type                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      variable name length                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                          variable name                        :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        variable value/ variable value length/ array count     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                          variable value                       :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


==========
==协议头==
==========
Ver (4 bits)
    协议版本号，当前为1
Request ID (28 bits)
    请求ID，用来标记每次通信请求，方便客户端区分
Request command (16 bits)
    请求命令号，用来支持插件的多种类型操作，如设置，获取，增加等（也可以通过variable来确定，这样做只是为了统一，速度也较快）。
    无需支持多种类型操作时填入REQ_CMD_NONE 0
Flags (16 bits)
    请求模式标志，用来支持插件的操作模式，如同、异步，更新缓存、数据库等。加入原因同 request command
    无需支持多种模式操作时填入FLAGS_NONE 0
plugin name length (32 bits)
    指定插件名长度
plugin name (变长字符串)
    插件名

==========
==协议体==
==========
variable type (32 bits)
    后续变量类型，同时也是数据结束标志
    enum {
        DATA_TYPE_EOF = 0,
        DATA_TYPE_U32,
        DATA_TYPE_STRING,
        DATA_TYPE_ARRAY
    };
variable name length (32 bits)
    变量名长度
variable name (32 bits)
    变量名
variable value/ variable value length/ array count
    数值型变量值、或者变量长度。当变量类型为数值型时，该项表示变量的值。
    变量类型为字符串型时，该项标志变量值的长度。
    变量类型为数组时，该项标志该数组保存的元素个数
variable value (可选 变长字符串)
    当变量类型为字符串或者数组时，该项为变量的值。否则没有该项。


协议头为每条协议必备的内容，协议头长度至少为13个字节。否则视为无效请求。
协议体为请求的变量参数信息，可以为多个，(变量类型+变量名)可以重复，取覆盖后的变量值。
变量可以为0个或多个。

变量类型为 DATA_TYPE_EOF 时，标志整条协议结束。

整条请求最小的长度为 13(req header) + 4(DATA_TYPE_EOF) = 17个字节。




==========
==返回包==
==========

 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          Request ID                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          Reply Code                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             vsize                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                              val                              :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Request ID (32 bits)
    请求ID，用来标记每次通信请求，方便客户端区分

Reply Code (32 bits)
    入队操作结果，当前有以下几种值，当前只用到了 REP_OK, REP_ERROR
        #define REP_ERR			0x800
        #define REP_CACHE_HIT		0x801
        #define REP_CACHE_MISS		0x802
        #define REP_OK			0x803
        #define REP_NOTIN		0x804
        #define REP_NOMATCH		0x805
    当操作成功，且后端插件无数据返回时，返回包到此结束。

vsize (32 bits)
    当操作有误，或者后端插件有数据返回时，该项数据有意义。
    1, 当Reply Code == REP_ERR 时， 该项数据为错误码，以下之一：
        #define ERR_VER			0x101	/* Version mismatch */
        #define ERR_SEND		0x102	/* Error sending data */
        #define ERR_BROKEN		0x103	/* Broken request */
        #define ERR_UNKREQ		0x104	/* Unknown request */
        #define ERR_MEM			0x105	/* Memory allocation error */
        #define ERR_DB			0x106	/* Database error */
        #define ERR_BUSY		0x107	/* queue full */
    2, 当后端插件有数据返回时，该项表示返回数据的长度。

val
    变量内容。该处内容跟请求包包体的格式一致。




====
=注=
====
	1, 整包长度不能超过 64k bytes。
