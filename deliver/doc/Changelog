为了在 modules 中使用 src 下的公有函数, 修改了 Makefile

修改了 extend.c, 对 hash 类型的属性, clear 时自动调用 hashtbl_free()

增加了log.c, 为 ape 提供日志功能, ape.conf 中增加了 log_file 和 log_level 配置项

libape-mysql.c 中的公用函数提到了 src/adb.c 中

增加了 ulist.c, 暂时还没用上

为了针对不同的 subuser 实现订阅不同业务类型的消息, users.h 中 subuser 加了个properties

json.c 190 free(jlist->name); ===> if (jlist->name != NULL) free(jlist->name);

短信报警功能

sock.c basemem 太少会降低并发连接的个数, growup() 函数貌似没用, 现在 basemen 开始改成了 5120

raw.c post_raw() 信息加上会发给他的 linked 的 user, users.h 加了 #define FLG_VUSER 0x10
make_link 函数有修改

channel.c 新增 getchanf 函数

(2009-10-27)last updateED: ec785210537e740c660e39959faf595acd82da57

hash.c
--------
        if (strcasecmp(hDbl->key, key) == 0) {
            free(hTmp->key);
hashtbl_append() CHANGE TO
        if (strcasecmp(hDbl->key, key) == 0) {
                htbl->first = hTmp->lnext;
            free(hTmp->key);

users.c
    check_timeout() 改变了删除超时/关闭 subusers 的方式, delsubuser() 参数变化, clear_subuusers()等发生变化

    free_raw(raw);
send_raw_inline() CHANGED TO
    /* send_raw_inline just forged a new raw, and posted it */
    free_raw(copy_raw_z(raw));

double free's core dump
=======================

raw.c
------
    if (--(fraw->refcount) <= 0) {
free_raw() CHANGE TO
        if (fraw == NULL) return 0;
    if (--(fraw->refcount) == 0) {

send_raws() ADD
        /*
         * after raw sended, we must set the pool's raw point to null
         * or, check timeout->delsubuser->destroy_raw_pool->free_raw'll core dump
         */

    user->raw_pools.high.nraw = 0;
    user->raw_pools.low.nraw = 0;
    user->raw_pools.nraw = 0;
CHANGED TO
    user->raw_pools.high.nraw = 0;
    user->raw_pools.low.nraw = 0;
    user->raw_pools.nraw = 0;

        pool = user->raw_pools.high.rawhead;
        while (pool != NULL) {
            pool->raw = NULL;
            pool = pool->next;
        }
        pool = user->raw_pools.low.rawhead;
        while (pool != NULL) {
            pool->raw = NULL;
            pool = pool->next;
        }

        free_raw(pool->raw);
destroy_raw_pool() CHANGED TO
        free_raw(pool->raw);
            pool->raw = NULL;

users.c
--------
    destroy_raw_pool(del->raw_pools.low.rawhead);
    destroy_raw_pool(del->raw_pools.high.rawhead);
delsubuser() CHANGED TO
    destroy_raw_pool(del->raw_pools.low.rawhead);
    destroy_raw_pool(del->raw_pools.high.rawhead);
        del->raw_pools.low.rawhead = NULL;
        del->raw_pools.low.rawfoot = NULL;
        del->raw_pools.high.rawhead = NULL;
        del->raw_pools.high.rawfoot = NULL;


callbacks 添加了delsubuser.

json_item_copy()
    obj->jchild.head->next = new_item;
CHANGED TO
        new_item->next = obj->jchild.child;
        obj->jchild.child = new_item;
    //obj->jchild.head->next = new_item;

