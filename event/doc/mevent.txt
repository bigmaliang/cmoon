社区事件中心介绍
==============

开发历史
-------
	由之前的即时数据存储接口 和 社区一版的事件中心演化而来
	整个架构和大部分代码来自 nmdb, 多协议网络数据库.


应用场景
-------
	为高速 I/O 应用提供缓存队列，分布式, 后台执行能力, 可以加快前端业务响应速度和有效缓解压力毛刺.

	应用方提供业务编号, 命令号, 命令参数, 交由后台同步或异步执行相关命令的业务逻辑, 返回对应结果.

	典型应用:
		1, 用户信息业务 + 获取好友列表 + 用户号码  =  用户好友列表
		2, 成长信息业务 + 增加好友积分 + 用户号码 + 积分数  =  增加后的积分数   (同步方式)
		   成长信息业务 + 增加好友积分 + 用户号码 + 积分数  =  网络操作状态返回  (异步方式)

	由于 udp 包长度限制, 事件中心仅支持64KB以内的内容传递.


服务端工作模型
-------
	1, 校验请求包合法性
	2, 解出业务编号，并查找后端是否支持此种业务
	3, 对支持的业务解出整包数据，放入相应的业务队列
	4, 如果是同步请求，给相应处理线程发送业务到达信号，处理线程搞定后发送返回包,
	   否则直接返回处理成功给调用者.


高速 I/O 常见问题及应对方法
-------
	 速度
	 	epoll
		基于命令的内存缓存
		队列缓存, 异步处理
		(入列速度, 15000/秒)
		
		问题: 缓存无过期时间

	 容量
		单台容量受内存限制, 满负荷入列1分钟左右即满.
	 	分布式部署(多业务共存一台机器, 单个业务多机器分担)
		
		业务拆分, 负载均衡
		
	 接口
	 	应用方多语言接口(C, PHP+, Python, Lisp, Ruby...)
		业务逻辑后端实现(减少通信次数, 避免重复实现业务逻辑)

		OPEN 问题
		业务开发语言问题
		
	 稳定性
	 	通用性daemon进程存在判断
		针对性接口可用性判断
		(2次故障)

		短信报警功能

