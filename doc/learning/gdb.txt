1, 设置 watchpoint
gdb 默认设置观察点是对变量， 比如 watch s， 当 s 超过生效范围时便变得不能监控。
这时需要监控 s 的地址， 这样 p s, watch *(char*)0xaafffff8。
0xaafffff8 为 s 的值。

(gdb) p ptr
$3 = (memcached_st *) 0xa1eff08
(gdb) watch *(memcached_st *) 0xa1eff08
Watchpoint 2: *(struct memcached_st *) 169803528

这样就能监控对 ptr 指向的内存空间的结构体的修改。
注意， 不能 watch *(_Bool*) [&ptr.flags.bin_mode]
对结构题内部成员的监控将不能达到效果。


2, 查看内存
(gdb) p buf
$4 = (const unsigned char *) 0x808cae0 "\020"

      x/n  fu <addr>
(gdb) x/100cb 0x808cae0

以字符串的方式查看该地址100个单元的内容。

n表示要显示的内存单元的个数

f表示显示方式, 可取如下值
x 按十六进制格式显示变量。c
d 按十进制格式显示变量。
u 按十进制格式显示无符号整型。
o 按八进制格式显示变量。
t 按二进制格式显示变量。
a 按十六进制格式显示变量。
i 指令地址格式
c 按字符格式显示变量。
f 按浮点数格式显示变量。

u表示一个地址单元的长度
b表示单字节，
h表示双字节，
w表示四字节，
g表示八字节
