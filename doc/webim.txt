WebIM
=====

comet
-----
http://cometdproject.dojotoolkit.org/

	http://www.ibm.com/developerworks/cn/web/wa-lo-comet/
	Comet：基于 HTTP 长连接的“服务器推”技术
	Bayeux Protocol -- Bayeux 1.0draft1



pushlet
-------
http://www.pushlets.com/	
	一个 coment 的java实现

	http://www.matrix.org.cn/resource/article/2007-01-16/bcc2c490-a502-11db-8440-755941c7293d.html
	Think in Pushlet


ape
---
http://www.ape-project.org/
	Real time data streaming
	

http://blog.csdn.net/yyri/archive/2008/02/22/2113976.aspx
Comet简介及实际使用
定义
====
传统的web应用都是基于请求-响应的模式，ajax的改进只是非全页面更新，无法解决实时性和事件驱动。
ajax with polling通过定时请求可以实现伪实时，但频繁的建立和销毁连接又会耗费服务器大量资源，
增加带宽使用。Comet使用Http1.1 长连接，实现实时的服务器-客户端数据推送。

Comet的实现可以有两种方式，Streaming和Long-Polling。Streaming方式建立连接后，两端均不断开，
使用此连接实时传输消息。Long-Polling方式一旦完成数据接收，即断开当前连接并重新建立新连接。
二者相比Streaming性能最优，但即使是Long-Polling，
不管是服务端负载还是对网络带宽的使用，也大大优于传统的Polling。


浏览器端兼容性
============
在Comet之前，可通过下述途径来实现类似的效果，其中部分方式现在仍有较多使用。各方式对浏览器端的兼容性如下：

1.     IFrame
最早的实现方式，通过隐藏的IFrame元素实现对服务器的持续请求，在返回内容中输出并执行JavaScript以实现。
优点是基本所有浏览器都支持，缺点是会导致部分浏览器的状态条一直为读取状态且鼠标状态为忙碌，影响用户体验。

2.     Htmlfile ActiveX object
通过将HTML IFrame元素置于一个ActiveX中，规避了1中所提到的两个缺点。
其缺点很显然，仅IE支持，如Google Gtalk。另外Zeitoun的comet-iframe将提供Javascript对象支持内嵌IFrame，支持IE,FF。

3.     Multipart XHR(XMLHttpRequest)
1995年，Netscape中增加了一个特性叫Server Push，这个特性允许服务器端在同一个
Http Response中发送图片或HTML页的新版本到浏览器端，通过在HTML头声明ContentType为multipart/x-mixed-replace实现，
浏览器会使用新版本的HTML替换已有页面。不过这个特性仅在使用Gecko内核的浏览器中支持。

4.     XHR streaming
通过自定义返回数据格式，在浏览器端捕获onreadystatechange
事件并在readyState=3时回调对应JavaScript方法来处理数据并实现。此方式IE不可行。

5.     XHR long polling
上述若干方法兼容性都不是很好，而XHR long polling在所有支持XHR的浏览器中都可以使用。
其实现方式为：浏览器建立一个异步连接，当服务器响应后回调JS方法，
然后重新建立新的连接并等待服务器端下一次响应。

6.     Dynamic script tag long polling
该方式更好解决跨域调用问题，虽然跨域页面的互操作也可以通过代理来解决。

7.     Server-sent events
HTML5草案中的新元素event source。


可靠性
=====
代理服务器和防火墙可能对Comet应用有不利影响。一般防火墙都会断开已建立时间过长的连接。
大多数Comet框架的解决办法是重建连接。另外，代理服务器可能缓存被推送的数据，使应用丧失实时性


注意事项
=======
1.     HTTP1.1标准中有如下规定：
“A single-user client SHOULD NOT maintain more than 2 connections with any server or proxy”，
并且此规则被包括IE和FF在内的绝大多数浏览器遵守。因此，当comet占用一个http长连接，
将可能导致浏览器不能为ajax请求创建新的连接，比如浏览器正在读取大量图片时。

2.     如果有新的公共数据需要push，所有servlet要同时将数据push出去，在push之前还会有查询，
这样对cpu内存和网络都会有较大消耗，而且是同时的，会造成共振效应。
可以考虑使用一个公共的查询线程来负责，request被放入一个队列，查询线程负责轮询所有request，
来将各自需要的数据push到client，这样可以响应的并发连接数可能会多很多，且避免了共振。
