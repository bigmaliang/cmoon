lighttpd
========

lighttpd.conf
-------------

-#           "mod_rewrite",
+            "mod_rewrite",


+url.rewrite-once              = ( "^/([^\.\?]+)$" => "/run/viki?ScriptName=/$1",
+                                  "^/([^\.]+)\?(.*)$"   => "/run/viki?ScriptName=/$1&$2" )
+                                  


-$HTTP["remoteip"] =~ "127.0.0.1" {
-       alias.url += (
-               "/doc/" => "/usr/share/doc/",
-               "/images/" => "/usr/share/images/"
-       )
-       $HTTP["url"] =~ "^/doc/|^/images/" {
-               dir-listing.activate = "enable"
-       }
-}
+#$HTTP["remoteip"] =~ "127.0.0.1" {
+#      alias.url += (
+#              "/doc/" => "/usr/share/doc/",
+#              "/images/" => "/usr/share/images/"
+#      )
+#      $HTTP["url"] =~ "^/doc/|^/images/" {
+#              dir-listing.activate = "enable"
+#      }
+#}


config-avilable
---------------

10-simple-vhost.conf:

-simple-vhost.document-root       = "/html/"
+simple-vhost.document-root       = "/htdocs/"

-simple-vhost.default-host        = "www.example.com"
+simple-vhost.default-host        = "www.eol.com"
+
+  $HTTP["host"] == "www.eol.com" {
+    server.document-root = "/var/www/www.eol.com/fly/"
+  }

10-cgi.conf:

-$HTTP["url"] =~ "^/cgi-bin/" {
+$HTTP["url"] =~ "^/run/" {


/usr/sbin/lighty-enable-mod



postgresql
==========

1, 建立 postgresql 账号
	用 postgres 用户登录psql,	执行
	CREATE USER mner CREATEDB password 'loveu';
	这样就建立了一个 可以创建数据库的 mner 用户, 通过非ident方式链接的时候密码为 loveu
	\du 查看当前用户
	select * from pg_trigger; 查看系统中所有的 trigger

2, 配置访问方式
	...pg_hba.conf
	----------------
	-local	all		all		ident	sameuser
	+local   all     mner    ident mner
	#local 允许本地链接, all 数据库名, mner 我们上面创建的数据库用户名,
	#ident 使用pg_ident.conf里的方式验证认证, mner pg_ident.conf 中的关键字

	.../pg_ident.conf
	-----------------
	+mner            bigml           mner
	#mner 关键字, pg_hba.con 中ident 后的映射方式, sameuser不用在这里存在
	#bigml Unix登录用户名, mner postgresql 用户名(ROLE名)

3, 建立数据库
	用刚建立和配置的 mner 账号登录:
	$psql -U mner -d postgres (当前还没建立mn_sys库)
		create database mn_sys encoding='utf8';
		create database csc encoding='utf8';
		用postgres帐号登录:
		\c mn_sys
		CREATE LANGUAGE plpgsql; -- 开启 plpgsql 语言
		\c csc
		CREATE LANGUAGE plpgsql;
	以后都可以用 $psql -U mner -d mn_sys 登录

4, 修改postgresql可选配置
	/etc/postgresql/xx/main/postgresql.conf
	------------------
	
	-#fsync = on                    # turns forced synchronization on or off
	+fsync = off
	
	-#full_page_writes = on			# recover from partial page writes
	+full_page_writes = off			# recover from partial page writes

5, 建立mn表
	$moon/rock/mtls/createTable.sh
	mn_sys=> \i .../moon/rock/mtls/table.sql

6, mn表初始化
	mn_sys=> \i .../moon/rock/mtls/data.sql
	
	
备注:
	上述配置, mnuser 只能以bigml通过 local 方式登录, 如需其他方式请修改 pg_hba.conf 文件,
	pg_ident.conf 文件只是在 认证方式为 ident 的时候配合修改(ident也可以存在于TCP/IP方式)
	关于 pg_hba.conf 的说明可以参考 http://www.chinaunix.net/jh/18/8176.html
