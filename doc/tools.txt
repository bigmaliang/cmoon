知识
===

译言
---
	http://www.yeeyan.com/beta

jQuery中的this
-------------
	http://www.cnblogs.com/hacker84/archive/2009/04/22/1441536.html

DTD
---
	http://www.w3school.com.cn/dtd/index.asp DTD学习
	http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd 实例

unlink
------
	unlink 函数主要和mkstemp一起使用用来创建一个临时文件, 然后通过 unlink 删掉这个文件的
	目录入口, 保证临时文件不被其他用户查看, 所以临时文件还是可以通过文件描述符访问,
	直到最后一个打开的进程关闭文件操作符或者程序退出后临时文件被彻底的删除.

Algorithms
----------
	http://www.algosort.com/
	Computer Programming Algorithms Directory
	Encryption Sorting Search Tree Phonetic ...

	http://www.itl.nist.gov/div897/sqg/dads/terms.html
	Dictionary of Algorithms and Data Structures

	http://eternallyconfuzzled.com/jsw_home.aspx
	Data Structure, Algorithms, Languages

	http://c-algorithms.sourceforge.net/
	Implementations of many common data structures and algorithms.

	http://www.partow.net/programming/hashfunctions
	General Purpose Hash Function Algorithms

	http://osdir.com
	mailing list archive	


http://tools.mozilla.com
========================
http://tools.mozilla.com/
http://tools.mozilla.com/simple.html
哪个交互更好? 浏览列表的时候选择一行能跟用户用友好的方式突出这行, 更容易让人接受


SCM
---
* http://progit.org/ *

http://progit.org/book/zh/
git branch event_data
git checkout event_data
....
git push origin event_data:event_data
将本机的 event_data branch 推到 origin remote 的 event_data branch
或者用以下简写 git checkout --track origin/event_data

git push [remotename] [localbranch]:[remotebranch]
git push origin :event_data
删掉远程event_data branch

git push git@github.com:bigml/cmoon.git ml:master
将开发机上 ml 分支提交到 github 的 bigml master 分支

git pull --rebase
在 pull(origin/master) 的基础上再做 commit.
有时本地的 checkin 没有 push 到 origin/master,
git st 会提示 master branch and 'origin/master' have diverged
此时不能成功 pull, 需要先pull origin master:master, 然后再作一次 commit 本地修改
pull --rebase 就帮我们干这事, 另外还有如下方式：

http://stackoverflow.com/questions/2452226/master-branch-and-origin-master-have-diverged-how-branches-to-undiverge
-----------------------------------------
$ git merge origin/master
This tells Git to integrate the changes from origin/master into your work and create a merge commit.
The graph of history now looks like this:

... o ---- o ---- A ---- B  origin/master (upstream work)
                   \      \
                    C ---- M  master (your work)

$ git rebase origin/master
This tells Git to replay commit C (your work) as if you had based it on commit B instead of A.
CVS and Subversion users routinely rebase their local changes on top of upstream work when they update before commit.
Git just adds explicit separation between the commit and rebase steps.

The graph of history now looks like this:

... o ---- o ---- A ---- B  origin/master (upstream work)
                          \
                           C'  master (your work)
Commit C' is a new commit created by the git rebase command.
It is different from C in two ways:

It has a different history: B instead of A.
It's content accounts for changes in both B and C: it is the same as M from the merge example.


The git pull command provides a shorthand way to fetch from origin and rebase local work on it:

$ git pull --rebase
This combines the above fetch and rebase steps into one command.

-------------------------------------------


mkdir my_blog_tmp
cd my_blog_tmp
git-svn init http://code.yoursite.net/my_blog/trunk/ --no-metadata
git config svn.authorsfile ~/Desktop/users.txt
git-svn fetch
cd ../ && git clone my_blog_tmp my_blog

git checkout -b event_data origin/event_data
从 origin remote 上 获取 event_data branch

remote
branch

ssh 
-----
cd ~/.ssh
mkdir key_backup
cp id_rsa* key_backup
rm id_rsa*
ssh-keygen -t rsa -C "tekkub@gmail.com"

设计风格
------
	http://www.ronniesan.com/work/
	http://www.douban.com/
	http://www.dropbox.com/
	http://photo.163.com/story130@126/big/#aid=191548433&id=5998768727
	http://www.smashingmagazine.com/2010/11/08/equal-height-columns-using-borders-and-negative-margins-with-css/

codeburner
----------
	http://tools.sitepoint.com/codeburner/
	查找 HTML, CSS 各个标签的标准用法和浏览器兼容性, 带实例.


Pencil
------
	http://www.evolus.vn/Pencil/
	针对 HTML 的xfig/inkscape?


Favoicon
--------
	http://favicon-generator.org/
	生成 favorate icon

	http://spritegen.website-performance.org/
	CSS 图片自动合并工具以减少http请求


jQuery Tools
------------
	http://flowplayer.org/tools/index.html
	页卡(tabs), 提示(tips), 醒目(expose), 弹出框(overlay), 滚动(scrollable), 嵌入Flash(flashembed)

	Uploadify
	---------
	http://www.uploadify.com/
	JS 上传图片
	
	Jcrop
	-----
	http://deepliquid.com/content/Jcrop.html
	JS 裁剪图片


Visual Event
------------
	http://www.sprymedia.co.uk/article/Visual+Event
	又一个配合jQuery使用NB的工具, 可以看到当前页面有哪些事件.

	http://www.westciv.com/xray/
	http://www.sprymedia.co.uk/article/Rule
	两个小工具, 盒子和尺子


jsondiff
--------
	http://tlrobinson.net/projects/js/jsondiff/
	http://json.parser.online.fr/
	展现 json 格式数据, 可查看区别.


jsBeauty
--------
	http://jsbeautifier.org/
	压缩后的js代码还原, 便于阅读.


routetrace
----------
http://tool.chinaz.com/Tracert/	


scrot
-----
抓屏软件

scrot -d 3 x.jpg
scrot -d 3 -s x.jpg
scrot -u x.jpg

  -s, --select              interactively choose a window or rectangle
                            with the mouse
  -b, --border              When selecting a window, grab wm border too
  -u, --focused             use the currently focused window


tools
-----
	scrot		抓屏软件
		scrot -d 3 -s x.jpg 延迟3秒，选择抓屏，存到x.jpg中

	valgrind	调试软件
		valgrind --leak-check=full ./xxxxx
		
	screen		方便调试后台程序工具
		screen -S dbg 新开 dbg 终端
		screen -r dbg attach 到 dbg 终端
		C+a c 新建、 n 切换、 d detach

	ack-grep	代码grep				http://betterthangrep.com/
		ack-grep -f --hh  仅打印文件名
		ack-grep --hh 'RBTOP_OK'  * 仅在头文件中查找 RBTOP_OK

	eMail		命令行发smpt邮件		https://github.com/deanproxy/email

	z			目录关键字跳转			https://github.com/rupa/z
